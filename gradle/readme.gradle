/**
 * Generates README.md based on project properties, and
 * pushes it to GitHub if rootProject.hasProperty('push')
 */
task readme {
  description 'Updates README.md, and pushes it to GitHub.'

  doLast {
    def updateReadme = {
      def text = new File('gradle/readme.template').getText('UTF-8')
      def template = new groovy.text.StreamingTemplateEngine().createTemplate(text)

      def binding = [
              version: rootProject.VERSION_NAME - ~/-SNAPSHOT/
      ]

      String newText = template.make(binding)
      newText = newText.replace('\\u007B', '{')

      def updated = false
      def readmeFile = new File('README.md')
      if (readmeFile.text != newText) {
        readmeFile.text = newText
        updated = true
      }
      return updated
    }

    def commitReadme = {
      grgit.add(patterns: ['README.md'])
      grgit.commit(message: ":books: Update README for ${rootProject.version}")
      grgit.push()
    }

    if (updateReadme() && rootProject.hasProperty('push')) {
      logger.info "committing README for ${rootProject.version}"
      commitReadme()
    } else {
      logger.info "no README changes for ${rootProject.version}"
    }
  }
}
