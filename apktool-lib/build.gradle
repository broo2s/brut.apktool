plugins {
    id 'net.researchgate.release' version '2.6.0'
}
apply plugin: 'com.android.library'
apply from: "${rootProject.projectDir}/gradle/analysis.gradle"
apply from: "${rootProject.projectDir}/gradle/docs.gradle"
apply from: "${rootProject.projectDir}/gradle/deploy.gradle"

android {
    compileSdkVersion 15

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_5
        targetCompatibility JavaVersion.VERSION_1_5
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 15
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME
        setProperty('archivesBaseName', "apktool-lib-${versionName}")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkAllWarnings true
        lintConfig rootProject.file('gradle/lint.xml')
    }
    testOptions {
        unitTests {
            includeAndroidResources = true

            all {
                testLogging {
                    events 'failed'
                    showStackTraces = true
                    exceptionFormat = 'full'
                }
            }
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.13.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.4'
    testImplementation 'org.apache.directory.studio:org.dom4j.dom4j:1.6.1'
}

allprojects {
    tasks.withType(JavaCompile) {
        // Warn about deprecations
        //options.compilerArgs << '-Xlint:deprecation'
        // Warn about unchecked usages
        options.compilerArgs << '-Xlint:unchecked'
        // Don't warn about using source/target 1.5 option
        options.compilerArgs << '-Xlint:-options'

        options.debug(['debugLevel': 'source,lines,vars'])
        options.debug = VERSION_NAME.contains('SNAPSHOT')
    }

    tasks.withType(AbstractArchiveTask) {
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }
}

release {
    tagTemplate = '${name}-${version}'
    preTagCommitMessage = ':cloud: Release'
    tagCommitMessage = ':cloud: Release'
    newVersionCommitMessage = ':cloud: Bump'

    versionPropertyFile = '../gradle.properties'
    versionProperties = ['VERSION_NAME']

    git {
        requireBranch = ''
    }
}

nexusStaging {
    packageGroup = "com.github.tony19"
}